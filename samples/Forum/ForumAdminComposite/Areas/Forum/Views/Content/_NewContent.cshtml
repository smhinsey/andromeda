@using AdminComposite.Areas.Forum.Controllers
@using Euclid.Composites.Mvc
@model AdminComposite.Areas.Forum.InputModels.CreateForumContentInputModel
		   
<script type="text/javascript">
	$(document).ready(function() {
		$("#content-type").live("change", function() {
			var selectedValue = $("#content-type").val();

			if (selectedValue == "" || selectedValue == null) {
				$("#default-input-type").show();
				$("#content-specific-input").hide();
				$("#content-specific-input").html("");
			} else {
				$("#content-specific-input").load("@Url.Action("TypeSpecificInput")?contentType=" + selectedValue);
				$("#default-input-type").hide();
				$("#content-specific-input").show();
			}
		});

		$("#save-content").live("click", function() {
			$("#content-value").val($("#content-input").val());
			console.log($("#content-value").val());
		});
	});
</script>

<section>
	@using (Html.BeginFormForInputModel(Model, true, @Url.Action("List", "Content", new { forumId = Model.ForumIdentifier }), "create-form"))
	{
		@Html.HiddenFor(m => m.ForumIdentifier)
		@Html.HiddenFor(m => m.CreatedBy)
		@Html.HiddenFor(m => m.Value, new { id = "content-value" })
		;
		@Html.ValidationSummary()
		<fieldset>
			<legend>New Content</legend>
		
			<dl>
				<dt>@Html.LabelFor(m => m.Location)</dt>
				<dd>
					@Html.DropDownListFor(m => m.Location, new List<SelectListItem> { new SelectListItem { Selected = true, Text = " -- Content Location --", Value = string.Empty }, new SelectListItem { Selected = false, Text = "Home - Dismissable Header", Value = "home-dismissableheader" }, new SelectListItem { Selected = false, Text = "Home - Permanent Header", Value = "home-permanentheader" }, new SelectListItem { Selected = false, Text = "Category Listing - Header", Value = "categorylisting-header" }, new SelectListItem { Selected = false, Text = "Individual Category - Header", Value = "individualcategory-header" }, new SelectListItem { Selected = false, Text = "Tag Listing - Header", Value = "taglisting-header" }, new SelectListItem { Selected = false, Text = "Individual Tag - Header", Value = "individualtag-header" }, }, new { id = "content-location" })
				</dd>

				<dt>@Html.LabelFor(m => m.Type)</dt>
				<dd>
					@Html.DropDownListFor(m => m.Type, new List<SelectListItem> { new SelectListItem { Selected = true, Text = " -- Content Type --", Value = string.Empty }, new SelectListItem { Selected = false, Text = "Rich Text", Value = Enum.GetName(typeof(AvailableContentType), AvailableContentType.RichText) }, new SelectListItem { Selected = false, Text = "Embedded Youtube", Value = Enum.GetName(typeof(AvailableContentType), AvailableContentType.EmbeddedYouTube) }, }, new { id = "content-type" })
				</dd>

				<dt>@Html.LabelFor(m => m.Value)</dt>
				<dd>
					<span id="content-specific-input" style="display: none"></span>
					<span id="default-input-type">select type</span>
				</dd>

				<dt class="checkbox">@Html.LabelFor(m => m.Active)</dt>
				<dd>@Html.CheckBoxFor(m => m.Active)</dd>
			</dl>

			<div id="error" class="notification error hidden">
				<a href="#" class="close-notification" title="Hide Message" rel="tooltip">x</a>
				<p>
					<strong>Incomplete Form</strong>
					Provide a value for this content
				</p>
			</div>
			<button type="submit" id="save-content">Create</button>
		</fieldset>
	}
</section>