// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.239
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ForumTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Forum Voting")]
    [NUnit.Framework.CategoryAttribute("ForumAgentSpecs")]
    public partial class ForumVotingFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ForumVoting.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Forum Voting", "In order to interact with a Forum\r\nAs a Forum User\r\nI want to vote on Posts and C" +
                    "omments in that Forum", ProgrammingLanguage.CSharp, new string[] {
                        "ForumAgentSpecs"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Vote Post Up")]
        public virtual void VotePostUp()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Vote Post Up", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("the agent ForumAgent");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Body",
                        "CategoryIdentifier",
                        "AuthorIdentifier",
                        "ForumIdentifier"});
            table1.AddRow(new string[] {
                        "Vote up post",
                        "Post Body",
                        "11111111-1111-1111-1111-111111111111",
                        "00000000-0000-0000-0000-000000000000",
                        "22222222-2222-2222-2222-222222222222"});
#line 10
 testRunner.When("I publish the command PublishPost:", ((string)(null)), table1);
#line 13
 testRunner.And("the command is complete");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "AuthorIdentifier",
                        "VoteUp"});
            table2.AddRow(new string[] {
                        "00000000-0000-0000-0000-000000000000",
                        "true"});
#line 15
 testRunner.When("I publish the command VoteOnPost:", ((string)(null)), table2);
#line 18
 testRunner.And("the command is complete");
#line 20
 testRunner.Then("the Post has a score of 1");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Vote Post Down")]
        public virtual void VotePostDown()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Vote Post Down", ((string[])(null)));
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given("the agent ForumAgent");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Body",
                        "CategoryIdentifier",
                        "AuthorIdentifier",
                        "ForumIdentifier"});
            table3.AddRow(new string[] {
                        "Vote Post Down",
                        "Post Body",
                        "11111111-1111-1111-1111-111111111111",
                        "00000000-0000-0000-0000-000000000000",
                        "22222222-2222-2222-2222-222222222222"});
#line 25
 testRunner.When("I publish the command PublishPost:", ((string)(null)), table3);
#line 28
 testRunner.And("the command is complete");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "AuthorIdentifier",
                        "VoteUp"});
            table4.AddRow(new string[] {
                        "00000000-0000-0000-0000-000000000000",
                        "false"});
#line 30
 testRunner.When("I publish the command VoteOnPost:", ((string)(null)), table4);
#line 33
 testRunner.And("the command is complete");
#line 35
 testRunner.Then("the Post has a score of -1");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Vote Comment Up")]
        public virtual void VoteCommentUp()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Vote Comment Up", ((string[])(null)));
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
 testRunner.Given("the agent ForumAgent");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Body",
                        "CategoryIdentifier",
                        "AuthorIdentifier",
                        "ForumIdentifier"});
            table5.AddRow(new string[] {
                        "Post Title",
                        "Post Body",
                        "11111111-1111-1111-1111-111111111111",
                        "00000000-0000-0000-0000-000000000000",
                        "A96DA8B2-7E80-4424-83B4-A059C62FE898"});
#line 40
 testRunner.When("I publish the command PublishPost:", ((string)(null)), table5);
#line 43
 testRunner.And("the command is complete");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Body",
                        "AuthorIdentifier",
                        "ForumIdentifier"});
            table6.AddRow(new string[] {
                        "Comment Up",
                        "Comment Body",
                        "00000000-0000-0000-0000-000000000000",
                        "E061E032-3402-4296-B09F-6F6EA91AB484"});
#line 45
 testRunner.When("I publish the command CommentOnPost:", ((string)(null)), table6);
#line 48
 testRunner.And("the command is complete");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "AuthorIdentifier",
                        "VoteUp"});
            table7.AddRow(new string[] {
                        "00000000-0000-0000-0000-000000000000",
                        "true"});
#line 50
 testRunner.When("I publish the command VoteOnComment:", ((string)(null)), table7);
#line 53
 testRunner.And("the command is complete");
#line 55
 testRunner.Then("the Comment has a score of 1");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Vote Comment Down")]
        public virtual void VoteCommentDown()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Vote Comment Down", ((string[])(null)));
#line 57
this.ScenarioSetup(scenarioInfo);
#line 58
 testRunner.Given("the agent ForumAgent");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Body",
                        "CategoryIdentifier",
                        "AuthorIdentifier",
                        "ForumIdentifier"});
            table8.AddRow(new string[] {
                        "Post Title",
                        "Post Body",
                        "11111111-1111-1111-1111-111111111111",
                        "00000000-0000-0000-0000-000000000000",
                        "22222222-2222-2222-2222-222222222222"});
#line 60
 testRunner.When("I publish the command PublishPost:", ((string)(null)), table8);
#line 63
 testRunner.And("the command is complete");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Body",
                        "AuthorIdentifier",
                        "ForumIdentifier"});
            table9.AddRow(new string[] {
                        "Comment Down",
                        "Comment Body",
                        "00000000-0000-0000-0000-000000000000",
                        "22222222-2222-2222-2222-222222222222"});
#line 65
 testRunner.When("I publish the command CommentOnPost:", ((string)(null)), table9);
#line 68
 testRunner.And("the command is complete");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "AuthorIdentifier",
                        "VoteUp"});
            table10.AddRow(new string[] {
                        "00000000-0000-0000-0000-000000000000",
                        "false"});
#line 70
 testRunner.When("I publish the command VoteOnComment:", ((string)(null)), table10);
#line 73
 testRunner.And("the command is complete");
#line 75
 testRunner.Then("the Comment has a score of -1");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
